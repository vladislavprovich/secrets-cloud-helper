// Code generated by MockGen. DO NOT EDIT.
// Source: go-secretshelper/pkg/core (interfaces: TransformationPort)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	core "go-secretshelper/pkg/core"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTransformationPort is a mock of TransformationPort interface.
type MockTransformationPort struct {
	ctrl     *gomock.Controller
	recorder *MockTransformationPortMockRecorder
}

// MockTransformationPortMockRecorder is the mock recorder for MockTransformationPort.
type MockTransformationPortMockRecorder struct {
	mock *MockTransformationPort
}

// NewMockTransformationPort creates a new mock instance.
func NewMockTransformationPort(ctrl *gomock.Controller) *MockTransformationPort {
	mock := &MockTransformationPort{ctrl: ctrl}
	mock.recorder = &MockTransformationPortMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransformationPort) EXPECT() *MockTransformationPortMockRecorder {
	return m.recorder
}

// ProcessSecret mocks base method.
func (m *MockTransformationPort) ProcessSecret(arg0 context.Context, arg1 *core.Defaults, arg2 *core.Secrets, arg3 *core.Transformation) (*core.Secret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessSecret", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*core.Secret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProcessSecret indicates an expected call of ProcessSecret.
func (mr *MockTransformationPortMockRecorder) ProcessSecret(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessSecret", reflect.TypeOf((*MockTransformationPort)(nil).ProcessSecret), arg0, arg1, arg2, arg3)
}
